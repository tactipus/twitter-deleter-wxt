var background=function(){"use strict";function u(o){return o==null||typeof o=="function"?{main:o}:o}const s=globalThis.browser?.runtime?.id==null?globalThis.chrome:globalThis.browser,a=u(()=>{s.runtime.onInstalled.addListener(()=>{console.log("X Auth Helper installed!")});const o="x.com";console.log("hello 1");async function i(){console.log("hello 2");let n=await s.cookies.getAll({domain:o});n=n.filter(e=>e.name=="auth_token"||e.name=="ct0"||e.name=="kdt"||e.name=="twid");let r="";if(n.length==4){console.log("hello 3");for(const{name:e,value:l}of n)r+=`${e}=${l};`;r=btoa(r)}return r}s.runtime.onMessage.addListener((n,r,e)=>{if(console.log("hello 4"),n.action==="getCookies")return i().then(l=>{if(l.length)console.log("hello 5"),e({success:!0,key:l});else throw console.log("hello 6"),new Error}).catch(l=>e({success:!1})),!0})});function h(){}globalThis.browser?.runtime?.id==null?globalThis.chrome:globalThis.browser;function t(o,...i){}const g={debug:(...o)=>t(console.debug,...o),log:(...o)=>t(console.log,...o),warn:(...o)=>t(console.warn,...o),error:(...o)=>t(console.error,...o)};let c;try{c=a.main(),c instanceof Promise&&console.warn("The background's main() function return a promise, but it must be synchronous")}catch(o){throw g.error("The background crashed on startup!"),o}return c}();
background;
