var background=function(){"use strict";function a(e){return e==null||typeof e=="function"?{main:e}:e}const s=globalThis.browser?.runtime?.id==null?globalThis.chrome:globalThis.browser,c=a(()=>{s.runtime.onInstalled.addListener(()=>{console.log("X Auth Helper installed!")});const e="x.com";async function u(){let n=await s.cookies.getAll({domain:e});n=n.filter(r=>r.name=="auth_token"||r.name=="ct0"||r.name=="kdt"||r.name=="twid");let o=[];if(n.length==4)for(const{name:r,value:t}of n)o.push(t);return o}function g(n){n.requestHeaders.forEach(o=>{console.log(o)})}s.webRequest.onBeforeSendHeaders.addListener(g,{urls:["<all_urls>"]},["requestHeaders"]),s.runtime.onMessage.addListener((n,o,r)=>{if(n.action==="getCookies")return u().then(t=>{if(t.length)r({success:!0,key:t});else throw new Error}).catch(t=>r({success:!1})),!0})});function h(){}globalThis.browser?.runtime?.id==null?globalThis.chrome:globalThis.browser;function l(e,...u){}const d={debug:(...e)=>l(console.debug,...e),log:(...e)=>l(console.log,...e),warn:(...e)=>l(console.warn,...e),error:(...e)=>l(console.error,...e)};let i;try{i=c.main(),i instanceof Promise&&console.warn("The background's main() function return a promise, but it must be synchronous")}catch(e){throw d.error("The background crashed on startup!"),e}return i}();
background;
