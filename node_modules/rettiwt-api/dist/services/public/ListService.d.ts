import { CursoredData } from '../../models/data/CursoredData';
import { Tweet } from '../../models/data/Tweet';
import { User } from '../../models/data/User';
import { IRettiwtConfig } from '../../types/RettiwtConfig';
import { FetcherService } from './FetcherService';
export declare class ListService extends FetcherService {
    /**
     * @param config - The config object for configuring the Rettiwt instance.
     *
     * @internal
     */
    constructor(config?: IRettiwtConfig);
    /**
     * Get the list of members of a tweet list.
     *
     * @param id - The id of target list.
     * @param count - The number of members to fetch, must be \<= 100.
     * @param cursor - The cursor to the batch of members to fetch.
     *
     * @returns The list tweets in the given list.
     *
     * @example
     * ```
     * import { Rettiwt } from 'rettiwt-api';
     *
     * // Creating a new Rettiwt instance using the given 'API_KEY'
     * const rettiwt = new Rettiwt({ apiKey: API_KEY });
     *
     * // Fetching the first 100 members of the Twitter list with id '1234567890'
     * rettiwt.list.members('1234567890')
     * .then(res => {
     * 	console.log(res);
     * })
     * .catch(err => {
     * 	console.log(err);
     * });
     * ```
     *
     * @remarks Due a bug in Twitter API, the count is ignored when no cursor is provided and defaults to 100.
     */
    members(id: string, count?: number, cursor?: string): Promise<CursoredData<User>>;
    /**
     * Get the list of tweets from a tweet list.
     *
     * @param id - The id of target list.
     * @param count - The number of tweets to fetch, must be \<= 100.
     * @param cursor - The cursor to the batch of tweets to fetch.
     *
     * @returns The list tweets in the given list.
     *
     * @example
     * ```
     * import { Rettiwt } from 'rettiwt-api';
     *
     * // Creating a new Rettiwt instance using the given 'API_KEY'
     * const rettiwt = new Rettiwt({ apiKey: API_KEY });
     *
     * // Fetching the most recent 100 tweets of the Twitter list with id '1234567890'
     * rettiwt.list.tweets('1234567890')
     * .then(res => {
     * 	console.log(res);
     * })
     * .catch(err => {
     * 	console.log(err);
     * });
     * ```
     *
     * @remarks Due a bug in Twitter API, the count is ignored when no cursor is provided and defaults to 100.
     */
    tweets(id: string, count?: number, cursor?: string): Promise<CursoredData<Tweet>>;
}
